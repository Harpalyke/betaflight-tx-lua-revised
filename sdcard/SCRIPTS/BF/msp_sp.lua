SPORT_MSP_VERSION=bit32.lshift(1,5)SPORT_MSP_STARTFLAG=bit32.lshift(1,4)LOCAL_SENSOR_ID=0x0D;REMOTE_SENSOR_ID=0x1B;REQUEST_FRAME_ID=0x30;REPLY_FRAME_ID=0x32;local a=0;local b=0;local c={}local d=1;local e=0;local f=false;local g=0;mspRequestsSent=0;mspRepliesReceived=0;mspPkRxed=0;mspErrorPk=0;mspStartPk=0;mspOutOfOrder=0;mspCRCErrors=0;mspPendingRequest=false;local function h()mspRequestsSent=0;mspRepliesReceived=0;mspPkRxed=0;mspErrorPk=0;mspStartPk=0;mspOutOfOrderPk=0;mspCRCErrors=0 end;local i={}local j=1;local k=0;local l=0;local function m(n)local o=0;o=n[1]+bit32.lshift(n[2],8)local p=0;p=n[3]+bit32.lshift(n[4],8)+bit32.lshift(n[5],16)+bit32.lshift(n[6],24)local q=sportTelemetryPush(LOCAL_SENSOR_ID,REQUEST_FRAME_ID,o,p)if q then l=l+1 end end;function mspProcessTxQ()if#i==0 then return false end;if not sportTelemetryPush()then return true end;local n={}n[1]=a+SPORT_MSP_VERSION;a=bit32.band(a+1,0x0F)if j==1 then n[1]=n[1]+SPORT_MSP_STARTFLAG end;local r=2;while r<=6 do if j>#i then break end;n[r]=i[j]j=j+1;k=bit32.bxor(k,n[r])r=r+1 end;if r<=6 then n[r]=k;r=r+1;while r<=6 do n[r]=0;r=r+1 end;m(n)i={}j=1;k=0;return false end;m(n)return true end;function mspSendRequest(s,n)if#i~=0 then return nil end;i[1]=#n;i[2]=bit32.band(s,0xFF)for r=1,#n do i[r+2]=bit32.band(n[r],0xFF)end;g=s;mspRequestsSent=mspRequestsSent+1;return mspProcessTxQ()end;local function t(n)mspPkRxed=mspPkRxed+1;local u=1;local v=n[u]local w=bit32.band(v,0x20)~=0;u=u+1;if w then f=false;mspErrorPk=mspErrorPk+1;return nil end;local x=bit32.band(v,0x10)~=0;local y=bit32.band(v,0x0F)if x then d=1;c={}mspRxSize=n[u]e=bit32.bxor(mspRxSize,g)u=u+1;f=true;mspStartPk=mspStartPk+1 elseif not f then mspOutOfOrder=mspOutOfOrder+1;return nil elseif bit32.band(b+1,0x0F)~=y then mspOutOfOrder=mspOutOfOrder+1;f=false;return nil end;while u<=6 and d<=mspRxSize do c[d]=n[u]e=bit32.bxor(e,n[u])d=d+1;u=u+1 end;if u>6 then b=y;return true end;if e~=n[u]then f=false;mspCRCErrors=mspCRCErrors+1;return nil end;mspRepliesReceived=mspRepliesReceived+1;f=false;return c end;function mspPollReply()while true do local z,A,o,p=sportTelemetryPop()if z==REMOTE_SENSOR_ID and A==REPLY_FRAME_ID then local n={}n[1]=bit32.band(o,0xFF)o=bit32.rshift(o,8)n[2]=bit32.band(o,0xFF)n[3]=bit32.band(p,0xFF)p=bit32.rshift(p,8)n[4]=bit32.band(p,0xFF)p=bit32.rshift(p,8)n[5]=bit32.band(p,0xFF)p=bit32.rshift(p,8)n[6]=bit32.band(p,0xFF)local q=t(n)if type(q)=="table"then return g,q end else break end end;return nil end
