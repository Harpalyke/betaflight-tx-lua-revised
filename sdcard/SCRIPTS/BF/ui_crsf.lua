assert(loadScript("/SCRIPTS/BF/msp_crsf.lua"))()screenPath="/SCRIPTS/BF/X9/"SetupPages={}PageFiles={"pids.lua","rates1.lua","rates2.lua","filters.lua","pwm.lua","vtx.lua"}MenuBox={x=40,y=12,w=120,x_offset=36,h_line=8,h_offset=3}SaveBox={x=40,y=12,w=120,x_offset=4,h=30,h_offset=5}NoTelem={70,55,"No Telemetry",BLINK}local a=0;local b=68;local c=250;local d=80;local e=2;local f=3;local g=4;local h=5;local i=e;local j=1;local k=1;local l=0;local m=0;local n=0;local o=0;local p=false;local q=false;backgroundFill=backgroundFill or ERASE;foregroundColor=foregroundColor or SOLID;globalTextOptions=globalTextOptions or 0;function mergeUint16(r,s)return bit32.lshift(s,8)+r end;freqLookup={{5865,5845,5825,5805,5785,5765,5745,5725},{5733,5752,5771,5790,5809,5828,5847,5866},{5705,5685,5665,5645,5885,5905,5925,5945},{5740,5760,5780,5800,5820,5840,5860,5880},{5658,5695,5732,5769,5806,5843,5880,5917}}function updateVTXFreq(t)t.values["f"]=freqLookup[t.values[2]][t.values[3]]end;function postReadVTX(t)if t.values[1]==3 then t.fields[3].table={25,200,500,800}t.fields[3].max=4 elseif t.values[1]==4 then t.fields[3].table={25,100,200,400,600}t.fields[3].max=5 else end;if t.values and t.values[2]and t.values[3]then if t.values[2]>0 and t.values[3]>0 then updateVTXFreq(t)else t.values=nil end end end;function getWriteValuesVTX(u)local v=(u[2]-1)*8+u[3]-1;return{bit32.band(v,0xFF),bit32.rshift(v,8),u[4],u[5]}end;function postReadRates(t)if#t.values==12 then t.values[9]=mergeUint16(t.values[9],t.values[10])end end;function getWriteValuesRates(u)return{u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[8],bit32.band(u[9],0xFF),bit32.rshift(u[9],8),u[11],u[12]}end;function postReadRatesAdv(t)if#t.values==23 then t.values[20]=mergeUint16(t.values[20],t.values[21])t.values[22]=mergeUint16(t.values[22],t.values[23])/1000 end end;function getWriteValuesRatesAdv(u)return{u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[8],u[9],u[10],u[11],u[12],u[13],u[14],u[15],u[16],u[17],u[18],u[19],bit32.band(u[20],0xFF),bit32.rshift(u[20],8),bit32.band(u[22]*1000,0xFF),bit32.rshift(u[22]*1000,8)}end;function postReadFilters(t)if#t.values==18 then t.values[2]=mergeUint16(t.values[2],t.values[3])t.values[3]=mergeUint16(t.values[4],t.values[5])t.values[4]=mergeUint16(t.values[6],t.values[7])t.values[5]=mergeUint16(t.values[8],t.values[9])t.values[6]=mergeUint16(t.values[14],t.values[15])t.values[7]=mergeUint16(t.values[16],t.values[17])t.values[8]=mergeUint16(t.values[10],t.values[11])t.values[9]=mergeUint16(t.values[12],t.values[13])t.values[10]=t.values[18]end end;function getWriteValuesFilters(u)return{u[1],bit32.band(u[2],0xFF),bit32.band(bit32.rshift(u[2],8),0xFF),bit32.band(u[3],0xFF),bit32.band(bit32.rshift(u[3],8),0xFF),bit32.band(u[4],0xFF),bit32.band(bit32.rshift(u[4],8),0xFF),bit32.band(u[5],0xFF),bit32.band(bit32.rshift(u[5],8),0xFF),bit32.band(u[8],0xFF),bit32.band(bit32.rshift(u[8],8),0xFF),bit32.band(u[9],0xFF),bit32.band(bit32.rshift(u[9],8),0xFF),bit32.band(u[6],0xFF),bit32.band(bit32.rshift(u[6],8),0xFF),bit32.band(u[7],0xFF),bit32.band(bit32.rshift(u[7],8),0xFF),u[10]}end;function updateRateTables()if SetupPages[j].values[9]==0 then calculateGyroRates(SetupPages[j],8)calculatePidRates(SetupPages[j],8)elseif SetupPages[j].values[9]==1 then calculateGyroRates(SetupPages[j],32)calculatePidRates(SetupPages[j],32)end end;function updatePidRateTable()local w=SetupPages[j].values[1]local x=SetupPages[j].gyroRates[w]calculatePidRates(SetupPages[j],x)end;function calculateGyroRates(t,y)t.gyroRates={}t.fields[2].table={}for z=1,32 do t.gyroRates[z]=y/z;local A=nil;t.fields[2].table[z]=string.format("%.2f",y/z)end end;function calculatePidRates(t,y)t.fields[3].table={}for z=1,16 do t.fields[3].table[z]=string.format("%.2f",y/z)end end;function postReadAdvanced(t)if#t.values==10 then t.values[5]=mergeUint16(t.values[5],t.values[6])t.values[7]=mergeUint16(t.values[7],t.values[8])end;local w=t.values[1]if t.values[9]==0 then calculateGyroRates(t,8)else calculateGyroRates(t,32)end;local x=t.gyroRates[w]calculatePidRates(t,x)end;function getWriteValuesAdvanced(u)return{u[1],u[2],u[3],u[4],bit32.band(u[5],0xFF),bit32.rshift(u[5],8),bit32.band(u[7],0xFF),bit32.rshift(u[7],8),u[9],u[10]}end;local function B(C)if q then local D=io.open(logFile,"a")io.write(D,"Saving...\n")io.close(D)end;local t=SetupPages[j]if t.values then if t.getWriteValues then mspWritePackage(t.write,t.getWriteValues(t.values))else mspWritePackage(t.write,t.values)end;l=getTime()if i==g then n=n+1 else i=g;n=0;o=t.saveMaxRetries or 2;m=t.saveTimeout or 150 end end end;local function E()for z=1,#SetupPages do local t=SetupPages[z]t.values=nil end;i=e;l=0 end;local function F()if q then local D=io.open(logFile,"a")io.write(D,"Rebooting...\n")io.close(D)end;mspReadPackage(b)end;local function G()if q then local D=io.open(logFile,"a")io.write(D,"Writing...\n")io.close(D)end;mspReadPackage(c)end;local H={{t="save page",f=B},{t="reload",f=E},{t="reboot",f=F}}local I=false;local J=false;local function K(L,M)if L==nil or M==nil then return end;local t=SetupPages[j]if L==t.write then if t.eepromWrite then G()end;p=false;return end;if L==c then i=e;t.values=nil;l=0;if t.reboot then F()end;return end;if L~=t.read then return end;if#M>0 then t.values={}for z=1,#M do t.values[z]=M[z]end;if t.postRead~=nil then t.postRead(t)end end end;local function N()return#SetupPages[j].fields end;function cachePageElements(t)SetupPages[j]=nil;return end;local function O(P)j=j+P;if j>#SetupPages and j>#PageFiles then j=1 elseif j<1 then j=#SetupPages end;k=1 end;local function Q(P)k=k+P;if k>N()then k=1 elseif k<1 then k=N()end end;local function R(P)J=J+P;if J>#H then J=1 elseif J<1 then J=#H end end;local function S(t)if t.read and(t.reqTS==nil or t.reqTS+d<=getTime())then t.reqTS=getTime()mspReadPackage(t.read)end end;function drawScreenTitle(T)lcd.drawFilledRectangle(0,0,LCD_W,10)lcd.drawText(1,1,T,INVERS)end;local function U(t,V)local T=t.title;drawScreenTitle("Betaflight / "..T)for z=1,#t.text do local D=t.text[z]if D.to==nil then lcd.drawText(D.x,D.y,D.t,globalTextOptions)else lcd.drawText(D.x,D.y,D.t,D.to)end end;for z=1,#t.fields do local D=t.fields[z]local W=globalTextOptions;if z==k then W=INVERS;if i==f then W=W+BLINK end end;local X=20;if D.t~=nil then lcd.drawText(D.x,D.y,D.t..":",globalTextOptions)if D.sp~=nil then X=D.sp end else X=0 end;local Y=D.i or z;if t.values and t.values[Y]then local Z=t.values[Y]if D.table and D.table[t.values[Y]]then Z=D.table[t.values[Y]]end;lcd.drawText(D.x+X,D.y,Z,W)else lcd.drawText(D.x+X,D.y,"---",W)end end end;local function _(Z,a0,a1)if Z<a0 then Z=a0 elseif Z>a1 then Z=a1 end;return Z end;local function a2()local t=SetupPages[j]return t.fields[k]end;local function a3(P)local t=SetupPages[j]local a4=t.fields[k]local Y=a4.i or k;t.values[Y]=_(t.values[Y]+P,a4.min or 0,a4.max or 255)if a4.upd then a4.upd(t)end end;local function a5()local a6=MenuBox.x;local a7=MenuBox.y;local a8=MenuBox.w;local a9=MenuBox.h_line;local aa=MenuBox.h_offset;local ab=#H*a9+aa*2;lcd.drawFilledRectangle(a6,a7,a8,ab,backgroundFill)lcd.drawRectangle(a6,a7,a8-1,ab-1,foregroundColor)lcd.drawText(a6+a9/2,a7+aa,"Menu:",globalTextOptions)for z,ac in ipairs(H)do local W=globalTextOptions;if J==z then W=W+INVERS end;lcd.drawText(a6+MenuBox.x_offset,a7+(z-1)*a9+aa,ac.t,W)end end;local ad=0;local ae=0;function run_bf_ui(af)local ag=getTime()if ad+50<ag then E()end;ad=ag;if i==g and l+m<ag then if n<o then B()else i=e;E()end end;mspProcessTxQ()if af==EVT_MENU_LONG then J=1;i=h elseif EVT_PAGEUP_FIRST and af==EVT_ENTER_LONG then J=1;ae=1;i=h elseif i==h then if af==EVT_EXIT_BREAK then i=e elseif af==EVT_PLUS_BREAK or af==EVT_ROT_LEFT then R(-1)elseif af==EVT_MINUS_BREAK or af==EVT_ROT_RIGHT then R(1)elseif af==EVT_ENTER_BREAK then if ae==1 then ae=0 else i=e;H[J].f()end end elseif i<=e then if af==EVT_PAGEUP_FIRST then SetupPages[j]=nil;O(-1)elseif af==EVT_MENU_BREAK or af==EVT_PAGEDN_FIRST then SetupPages[j]=nil;O(1)elseif af==EVT_PLUS_BREAK or af==EVT_ROT_LEFT then Q(-1)elseif af==EVT_MINUS_BREAK or af==EVT_ROT_RIGHT then Q(1)elseif af==EVT_ENTER_BREAK then local t=SetupPages[j]local a4=t.fields[k]local Y=a4.i or k;if t.values and t.values[Y]and a4.ro~=true then i=f end elseif af==EVT_EXIT_BREAK then SetupPages[j]=nil;currentMenuState=menuStates["Crossfire"]end elseif i==f then if af==EVT_EXIT_BREAK or af==EVT_ENTER_BREAK then i=e elseif af==EVT_PLUS_FIRST or af==EVT_PLUS_REPT or af==EVT_ROT_RIGHT then a3(1)elseif af==EVT_MINUS_FIRST or af==EVT_MINUS_REPT or af==EVT_ROT_LEFT then a3(-1)end end;if SetupPages[j]==nil then SetupPages[j]=assert(loadScript(screenPath..PageFiles[j]))()end;local V=false;local t=SetupPages[j]if not t.values then S(t)V=true end;lcd.clear()if TEXT_BGCOLOR then lcd.drawFilledRectangle(0,0,LCD_W,LCD_H,TEXT_BGCOLOR)end;U(t,V)if getValue("TQly")==0 then lcd.drawText(NoTelem[1],NoTelem[2],NoTelem[3],NoTelem[4])end;if i==h then a5()elseif i==g then lcd.drawFilledRectangle(SaveBox.x,SaveBox.y,SaveBox.w,SaveBox.h,backgroundFill)lcd.drawRectangle(SaveBox.x,SaveBox.y,SaveBox.w,SaveBox.h,SOLID)lcd.drawText(SaveBox.x+SaveBox.x_offset,SaveBox.y+SaveBox.h_offset,"Saving...",DBLSIZE+BLINK+globalTextOptions)end;K(mspPollReply())return 0 end
