assert(loadScript("/SCRIPTS/BF/msp_crsf.lua"))()screenPath="/SCRIPTS/BF/X9/"SetupPages={}PageFiles={"pids.lua","rates1.lua","rates2.lua","filters.lua","pwm.lua","vtx.lua"}MenuBox={x=40,y=12,w=120,x_offset=36,h_line=8,h_offset=3}SaveBox={x=40,y=12,w=120,x_offset=4,h=30,h_offset=5}NoTelem={70,55,"No Telemetry",BLINK}local a=0;local b=68;local c=250;local d=80;local e=2;local f=3;local g=4;local h=5;local i=e;local j=1;local k=1;local l=0;local m=0;local n=0;local o=0;local p=false;local q=false;backgroundFill=backgroundFill or ERASE;foregroundColor=foregroundColor or SOLID;globalTextOptions=globalTextOptions or 0;function mergeUint16(r,s)return bit32.lshift(s,8)+r end;freqLookup={{5865,5845,5825,5805,5785,5765,5745,5725},{5733,5752,5771,5790,5809,5828,5847,5866},{5705,5685,5665,5645,5885,5905,5925,5945},{5740,5760,5780,5800,5820,5840,5860,5880},{5658,5695,5732,5769,5806,5843,5880,5917}}function updateVTXFreq(t)t.values["f"]=freqLookup[t.values[2]][t.values[3]]end;function postReadVTX(t)if t.values[1]==3 then t.fields[3].table={25,200,500,800}t.fields[3].max=4 elseif t.values[1]==4 then t.fields[3].table={25,100,200,400,600}t.fields[3].max=5 else end;if t.values and t.values[2]and t.values[3]then if t.values[2]>0 and t.values[3]>0 then updateVTXFreq(t)else t.values=nil end end end;function getWriteValuesVTX(u)local v=(u[2]-1)*8+u[3]-1;return{bit32.band(v,0xFF),bit32.rshift(v,8),u[4],u[5]}end;function postReadRates(t)if#t.values==12 then t.values[9]=mergeUint16(t.values[9],t.values[10])end end;function getWriteValuesRates(u)return{u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[8],bit32.band(u[9],0xFF),bit32.rshift(u[9],8),u[11],u[12]}end;function postReadRatesAdv(t)if#t.values==23 then t.values[20]=mergeUint16(t.values[20],t.values[21])t.values[22]=mergeUint16(t.values[22],t.values[23])/1000 end end;function getWriteValuesRatesAdv(u)return{u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[8],u[9],u[10],u[11],u[12],u[13],u[14],u[15],u[16],u[17],u[18],u[19],bit32.band(u[20],0xFF),bit32.rshift(u[20],8),bit32.band(u[22]*1000,0xFF),bit32.rshift(u[22]*1000,8)}end;function postReadFilters(t)if#t.values==18 then t.values[2]=mergeUint16(t.values[2],t.values[3])t.values[3]=mergeUint16(t.values[4],t.values[5])t.values[4]=mergeUint16(t.values[6],t.values[7])t.values[5]=mergeUint16(t.values[8],t.values[9])t.values[6]=mergeUint16(t.values[14],t.values[15])t.values[7]=mergeUint16(t.values[16],t.values[17])t.values[8]=mergeUint16(t.values[10],t.values[11])t.values[9]=mergeUint16(t.values[12],t.values[13])t.values[10]=t.values[18]end end;function getWriteValuesFilters(u)return{u[1],bit32.band(u[2],0xFF),bit32.band(bit32.rshift(u[2],8),0xFF),bit32.band(u[3],0xFF),bit32.band(bit32.rshift(u[3],8),0xFF),bit32.band(u[4],0xFF),bit32.band(bit32.rshift(u[4],8),0xFF),bit32.band(u[5],0xFF),bit32.band(bit32.rshift(u[5],8),0xFF),bit32.band(u[8],0xFF),bit32.band(bit32.rshift(u[8],8),0xFF),bit32.band(u[9],0xFF),bit32.band(bit32.rshift(u[9],8),0xFF),bit32.band(u[6],0xFF),bit32.band(bit32.rshift(u[6],8),0xFF),bit32.band(u[7],0xFF),bit32.band(bit32.rshift(u[7],8),0xFF),u[10]}end;function postReadAdvanced(t)if#t.values==10 then t.values[5]=mergeUint16(t.values[5],t.values[6])t.values[7]=mergeUint16(t.values[7],t.values[8])t.fields[2].table=t.gyroTables[t.values[9]]t.fields[3].table=t.gyroTables[t.values[9]]end end;function updateGyroTables()SetupPages[j].fields[2].table=SetupPages[j].gyroTables[SetupPages[j].values[9]]SetupPages[j].fields[3].table=SetupPages[j].gyroTables[SetupPages[j].values[9]]end;function getWriteValuesAdvanced(u)return{u[1],u[2],u[3],u[4],bit32.band(u[5],0xFF),bit32.rshift(u[5],8),bit32.band(u[7],0xFF),bit32.rshift(u[7],8),u[9],u[10]}end;local function w(x)if q then local y=io.open(logFile,"a")io.write(y,"Saving...\n")io.close(y)end;local t=SetupPages[j]if t.values then if t.getWriteValues then mspWritePackage(t.write,t.getWriteValues(t.values))else mspWritePackage(t.write,t.values)end;l=getTime()if i==g then n=n+1 else i=g;n=0;o=t.saveMaxRetries or 2;m=t.saveTimeout or 150 end end end;local function z()for A=1,#SetupPages do local t=SetupPages[A]t.values=nil end;i=e;l=0 end;local function B()if q then local y=io.open(logFile,"a")io.write(y,"Rebooting...\n")io.close(y)end;mspReadPackage(b)end;local function C()if q then local y=io.open(logFile,"a")io.write(y,"Writing...\n")io.close(y)end;mspReadPackage(c)end;local D={{t="save page",f=w},{t="reload",f=z},{t="reboot",f=B}}local E=false;local F=false;local function G(H,I)if H==nil or I==nil then return end;local t=SetupPages[j]if H==t.write then if t.eepromWrite then C()end;p=false;return end;if H==c then i=e;t.values=nil;l=0;if t.reboot then B()end;return end;if H~=t.read then return end;if#I>0 then t.values={}for A=1,#I do t.values[A]=I[A]end;if t.postRead~=nil then t.postRead(t)end end end;local function J()return#SetupPages[j].fields end;function cachePageElements(t)SetupPages[j]=nil;return end;local function K(L)j=j+L;if j>#SetupPages and j>#PageFiles then j=1 elseif j<1 then j=#SetupPages end;k=1 end;local function M(L)k=k+L;if k>J()then k=1 elseif k<1 then k=J()end end;local function N(L)F=F+L;if F>#D then F=1 elseif F<1 then F=#D end end;local function O(t)if t.read and(t.reqTS==nil or t.reqTS+d<=getTime())then t.reqTS=getTime()mspReadPackage(t.read)end end;function drawScreenTitle(P)lcd.drawFilledRectangle(0,0,LCD_W,10)lcd.drawText(1,1,P,INVERS)end;local function Q(t,R)local P=t.title;drawScreenTitle("Betaflight / "..P)for A=1,#t.text do local y=t.text[A]if y.to==nil then lcd.drawText(y.x,y.y,y.t,globalTextOptions)else lcd.drawText(y.x,y.y,y.t,y.to)end end;for A=1,#t.fields do local y=t.fields[A]local S=globalTextOptions;if A==k then S=INVERS;if i==f then S=S+BLINK end end;local T=20;if y.t~=nil then lcd.drawText(y.x,y.y,y.t..":",globalTextOptions)if y.sp~=nil then T=y.sp end else T=0 end;local U=y.i or A;if t.values and t.values[U]then local V=t.values[U]if y.table and y.table[t.values[U]]then V=y.table[t.values[U]]end;lcd.drawText(y.x+T,y.y,V,S)else lcd.drawText(y.x+T,y.y,"---",S)end end end;local function W(V,X,Y)if V<X then V=X elseif V>Y then V=Y end;return V end;local function Z()local t=SetupPages[j]return t.fields[k]end;local function _(L)local t=SetupPages[j]local a0=t.fields[k]local U=a0.i or k;t.values[U]=W(t.values[U]+L,a0.min or 0,a0.max or 255)if a0.upd then a0.upd(t)end end;local function a1()local a2=MenuBox.x;local a3=MenuBox.y;local a4=MenuBox.w;local a5=MenuBox.h_line;local a6=MenuBox.h_offset;local a7=#D*a5+a6*2;lcd.drawFilledRectangle(a2,a3,a4,a7,backgroundFill)lcd.drawRectangle(a2,a3,a4-1,a7-1,foregroundColor)lcd.drawText(a2+a5/2,a3+a6,"Menu:",globalTextOptions)for A,a8 in ipairs(D)do local S=globalTextOptions;if F==A then S=S+INVERS end;lcd.drawText(a2+MenuBox.x_offset,a3+(A-1)*a5+a6,a8.t,S)end end;local a9=0;local aa=0;function run_bf_ui(ab)local ac=getTime()if a9+50<ac then z()end;a9=ac;if i==g and l+m<ac then if n<o then w()else i=e;z()end end;mspProcessTxQ()if ab==EVT_MENU_LONG then F=1;i=h elseif EVT_PAGEUP_FIRST and ab==EVT_ENTER_LONG then F=1;aa=1;i=h elseif i==h then if ab==EVT_EXIT_BREAK then i=e elseif ab==EVT_PLUS_BREAK or ab==EVT_ROT_LEFT then N(-1)elseif ab==EVT_MINUS_BREAK or ab==EVT_ROT_RIGHT then N(1)elseif ab==EVT_ENTER_BREAK then if aa==1 then aa=0 else i=e;D[F].f()end end elseif i<=e then if ab==EVT_PAGEUP_FIRST then SetupPages[j]=nil;K(-1)elseif ab==EVT_MENU_BREAK or ab==EVT_PAGEDN_FIRST then SetupPages[j]=nil;K(1)elseif ab==EVT_PLUS_BREAK or ab==EVT_ROT_LEFT then M(-1)elseif ab==EVT_MINUS_BREAK or ab==EVT_ROT_RIGHT then M(1)elseif ab==EVT_ENTER_BREAK then local t=SetupPages[j]local a0=t.fields[k]local U=a0.i or k;if t.values and t.values[U]and a0.ro~=true then i=f end elseif ab==EVT_EXIT_BREAK then SetupPages[j]=nil;currentMenuState=menuStates["Crossfire"]end elseif i==f then if ab==EVT_EXIT_BREAK or ab==EVT_ENTER_BREAK then i=e elseif ab==EVT_PLUS_FIRST or ab==EVT_PLUS_REPT or ab==EVT_ROT_RIGHT then _(1)elseif ab==EVT_MINUS_FIRST or ab==EVT_MINUS_REPT or ab==EVT_ROT_LEFT then _(-1)end end;if SetupPages[j]==nil then SetupPages[j]=assert(loadScript(screenPath..PageFiles[j]))()end;local R=false;local t=SetupPages[j]if not t.values then O(t)R=true end;lcd.clear()if TEXT_BGCOLOR then lcd.drawFilledRectangle(0,0,LCD_W,LCD_H,TEXT_BGCOLOR)end;Q(t,R)if getValue("TQly")==0 then lcd.drawText(NoTelem[1],NoTelem[2],NoTelem[3],NoTelem[4])end;if i==h then a1()elseif i==g then lcd.drawFilledRectangle(SaveBox.x,SaveBox.y,SaveBox.w,SaveBox.h,backgroundFill)lcd.drawRectangle(SaveBox.x,SaveBox.y,SaveBox.w,SaveBox.h,SOLID)lcd.drawText(SaveBox.x+SaveBox.x_offset,SaveBox.y+SaveBox.h_offset,"Saving...",DBLSIZE+BLINK+globalTextOptions)end;G(mspPollReply())return 0 end
